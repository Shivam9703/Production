name: Validate Changed Salesforce Files

on:
  pull_request:
    branches:
      - main

jobs:
  validate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for proper diffing

      - name: Find changed Apex classes
        id: find-changes
        run: |
          # Get changed files in classes directory
          CHANGED_CLASSES=$(git diff --name-only origin/main...HEAD -- force-app/main/default/classes/*.cls)
          
          # Convert to space-separated list
          CHANGED_FILES=$(echo "$CHANGED_CLASSES" | tr '\n' ' ')
          
          # Set outputs
          echo "changed_files=${CHANGED_FILES}" >> $GITHUB_OUTPUT
          echo "has_changes=$( [ -z "$CHANGED_FILES" ] && echo 'false' || echo 'true' )" >> $GITHUB_OUTPUT
          
          # Debug output
          echo "Changed files: ${CHANGED_FILES}"
          echo "Has changes: $( [ -z "$CHANGED_FILES" ] && echo 'false' || echo 'true' )"

      - name: Install Salesforce CLI
        run: npm install --global @salesforce/cli

      - name: Authenticate to Salesforce Org
        run: |
          echo "${{ secrets.SFDX_AUTH_URL }}" > ./auth-url.txt
          sf org login sfdx-url --sfdx-url-file ./auth-url.txt --set-default

      - name: Validate changed classes
        if: steps.find-changes.outputs.has_changes == 'true'
        run: |
          # Create temporary directory structure
          mkdir -p deploy-src/force-app/main/default/classes
          
          # Copy changed files
          for file in ${{ steps.find-changes.outputs.changed_files }}; do
            if [ -f "$file" ]; then
              cp "$file" "deploy-src/$file"
              echo "Copied $file for deployment"
            fi
          done
          
          # Create package.xml
          mkdir -p deploy-src/force-app/main/default
          cat > deploy-src/force-app/main/default/package.xml <<EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <Package xmlns="http://soap.sforce.com/2006/04/metadata">
            <types>
              <members>*</members>
              <name>ApexClass</name>
            </types>
            <version>58.0</version>
          </Package>
          EOF
          
          # Run validation deployment
          sf project deploy validate \
            --source-dir deploy-src \
            --wait 30 \
            --test-level RunLocalTests \
            --verbose

      - name: Skip validation if no class changes
        if: steps.find-changes.outputs.has_changes != 'true'
        run: echo "No Apex class changes detected. Skipping validation."
